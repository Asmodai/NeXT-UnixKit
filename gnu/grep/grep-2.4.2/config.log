This file contains any messages produced by compilers while
running configure, to aid debugging if configure makes a mistake.

configure:577: checking for a BSD compatible install
configure:630: checking whether build environment is sane
configure:687: checking whether make sets ${MAKE}
configure:733: checking for working aclocal
configure:746: checking for working autoconf
configure:759: checking for working automake
configure:772: checking for working autoheader
configure:785: checking for working makeinfo
configure:809: checking host system type
configure:834: checking for mawk
configure:834: checking for gawk
configure:866: checking for gcc
configure:979: checking whether the C compiler (gcc -O3 -arch m68k -arch i386 -arch hppa -arch sparc  -arch m68k -arch i386 -arch hppa -arch sparc ) works
configure:995: gcc -o conftest -O3 -arch m68k -arch i386 -arch hppa -arch sparc   -arch m68k -arch i386 -arch hppa -arch sparc  conftest.c  1>&5
configure:1021: checking whether the C compiler (gcc -O3 -arch m68k -arch i386 -arch hppa -arch sparc  -arch m68k -arch i386 -arch hppa -arch sparc ) is a cross-compiler
configure:1026: checking whether we are using GNU C
configure:1035: gcc -E conftest.c
configure:1054: checking whether gcc accepts -g
configure:1097: checking for a BSD compatible install
configure:1152: checking for ranlib
configure:1181: checking build system type
configure:1215: checking for getconf
configure:1245: checking for CFLAGS value to request large file support
configure:1295: checking for LDFLAGS value to request large file support
configure:1311: checking for LIBS value to request large file support
configure:1370: checking for _FILE_OFFSET_BITS
configure:1399: checking for _LARGEFILE_SOURCE
configure:1428: checking for _LARGE_FILES
configure:1462: checking for gcc option to accept ANSI C
configure:1515: gcc  -c -O3 -arch m68k -arch i386 -arch hppa -arch sparc   conftest.c 1>&5
configure:1539: checking how to run the C preprocessor
configure:1560: gcc -E  conftest.c >/dev/null 2>conftest.out
configure:1556: undefined type, found `Syntax'
configure:1556: illegal external declaration, missing `;' after `Error'
configure: failed program was:
#line 1554 "configure"
#include "confdefs.h"
#include <assert.h>
Syntax Error
configure:1577: gcc -E -traditional-cpp  conftest.c >/dev/null 2>conftest.out
configure:1621: checking for function prototypes
configure:1780: checking for size_t
configure:1813: checking for ssize_t
configure:1846: checking for working const
configure:1900: gcc -c -O3 -arch m68k -arch i386 -arch hppa -arch sparc   conftest.c 1>&5
configure:1922: checking for ANSI C header files
configure:1935: gcc -E -traditional-cpp  conftest.c >/dev/null 2>conftest.out
configure:2002: gcc -o conftest -O3 -arch m68k -arch i386 -arch hppa -arch sparc   -arch m68k -arch i386 -arch hppa -arch sparc  conftest.c  1>&5
configure:2029: checking for string.h
configure:2039: gcc -E -traditional-cpp  conftest.c >/dev/null 2>conftest.out
configure:2029: checking for stdlib.h
configure:2039: gcc -E -traditional-cpp  conftest.c >/dev/null 2>conftest.out
configure:2029: checking for sys/param.h
configure:2039: gcc -E -traditional-cpp  conftest.c >/dev/null 2>conftest.out
configure:2029: checking for memory.h
configure:2039: gcc -E -traditional-cpp  conftest.c >/dev/null 2>conftest.out
configure:2029: checking for unistd.h
configure:2039: gcc -E -traditional-cpp  conftest.c >/dev/null 2>conftest.out
configure:2029: checking for libintl.h
configure:2039: gcc -E -traditional-cpp  conftest.c >/dev/null 2>conftest.out
configure:2035: libintl.h: No such file or directory
configure: failed program was:
#line 2034 "configure"
#include "confdefs.h"
#include <libintl.h>
configure:2069: checking for wctype.h
configure:2079: gcc -E -traditional-cpp  conftest.c >/dev/null 2>conftest.out
configure:2075: wctype.h: No such file or directory
configure: failed program was:
#line 2074 "configure"
#include "confdefs.h"
#include <wctype.h>
configure:2069: checking for wchar.h
configure:2079: gcc -E -traditional-cpp  conftest.c >/dev/null 2>conftest.out
configure:2075: wchar.h: No such file or directory
configure: failed program was:
#line 2074 "configure"
#include "confdefs.h"
#include <wchar.h>
configure:2110: checking for dirent.h that defines DIR
configure:2123: gcc -c -O3 -arch m68k -arch i386 -arch hppa -arch sparc   conftest.c 1>&5
configure:2119: undefined type, found `DIR'
configure: failed program was:
#line 2115 "configure"
#include "confdefs.h"
#include <sys/types.h>
#include <dirent.h>
int main() {
DIR *dirp = 0;
; return 0; }
configure:2110: checking for sys/ndir.h that defines DIR
configure:2123: gcc -c -O3 -arch m68k -arch i386 -arch hppa -arch sparc   conftest.c 1>&5
For architecture m68k:
configure:2117: header file 'sys/ndir.h' not found
configure:2119: undefined type, found `DIR'
configure: failed program was:
#line 2115 "configure"
#include "confdefs.h"
#include <sys/types.h>
#include <sys/ndir.h>
int main() {
DIR *dirp = 0;
; return 0; }
configure:2110: checking for sys/dir.h that defines DIR
configure:2123: gcc -c -O3 -arch m68k -arch i386 -arch hppa -arch sparc   conftest.c 1>&5
configure:2239: checking for opendir in -lx
configure:2258: gcc -o conftest -O3 -arch m68k -arch i386 -arch hppa -arch sparc   -arch m68k -arch i386 -arch hppa -arch sparc  conftest.c -lx   1>&5
ld: for architecture m68k
ld: can't locate file for: -lx
configure: failed program was:
#line 2247 "configure"
#include "confdefs.h"
/* Override any gcc2 internal prototype to avoid an error.  */
/* We use char because int might match the return type of a gcc2
    builtin and then its argument prototype would still apply.  */
char opendir();

int main() {
opendir()
; return 0; }
configure:2281: checking whether stat file-mode macros are broken
configure:2340: checking for working alloca.h
configure:2352: gcc -o conftest -O3 -arch m68k -arch i386 -arch hppa -arch sparc   -arch m68k -arch i386 -arch hppa -arch sparc  conftest.c  1>&5
For architecture m68k:
configure:2346: header file 'alloca.h' not found
configure: failed program was:
#line 2345 "configure"
#include "confdefs.h"
#include <alloca.h>
int main() {
char *p = alloca(2 * sizeof(int));
; return 0; }
configure:2373: checking for alloca
configure:2406: gcc -o conftest -O3 -arch m68k -arch i386 -arch hppa -arch sparc   -arch m68k -arch i386 -arch hppa -arch sparc  conftest.c  1>&5
configure:2572: checking whether closedir returns void
configure:2586: gcc -o conftest -O3 -arch m68k -arch i386 -arch hppa -arch sparc   -arch m68k -arch i386 -arch hppa -arch sparc  conftest.c  1>&5
configure:2612: checking for unistd.h
configure:2651: checking for getpagesize
configure:2679: gcc -o conftest -O3 -arch m68k -arch i386 -arch hppa -arch sparc   -arch m68k -arch i386 -arch hppa -arch sparc  conftest.c  1>&5
configure:2704: checking for working mmap
configure:2852: gcc -o conftest -O3 -arch m68k -arch i386 -arch hppa -arch sparc   -arch m68k -arch i386 -arch hppa -arch sparc  conftest.c  1>&5
For architecture m68k:
configure: In function `main':
configure:2824: `MAP_FIXED' undeclared (first use this function)
configure:2824: (Each undeclared identifier is reported only once
configure:2824: for each function it appears in.)
configure:2824: warning: comparison between pointer and integer
configure: failed program was:
#line 2712 "configure"
#include "confdefs.h"

/* Thanks to Mike Haertel and Jim Avera for this test.
   Here is a matrix of mmap possibilities:
	mmap private not fixed
	mmap private fixed at somewhere currently unmapped
	mmap private fixed at somewhere already mapped
	mmap shared not fixed
	mmap shared fixed at somewhere currently unmapped
	mmap shared fixed at somewhere already mapped
   For private mappings, we should verify that changes cannot be read()
   back from the file, nor mmap's back from the file at a different
   address.  (There have been systems where private was not correctly
   implemented like the infamous i386 svr4.0, and systems where the
   VM page cache was not coherent with the filesystem buffer cache
   like early versions of FreeBSD and possibly contemporary NetBSD.)
   For shared mappings, we should conversely verify that changes get
   propogated back to all the places they're supposed to be.

   Grep wants private fixed already mapped.
   The main things grep needs to know about mmap are:
   * does it exist and is it safe to write into the mmap'd area
   * how to use it (BSD variants)  */
#include <sys/types.h>
#include <fcntl.h>
#include <sys/mman.h>

/* This mess was copied from the GNU getpagesize.h.  */
#ifndef HAVE_GETPAGESIZE
# ifdef HAVE_UNISTD_H
#  include <unistd.h>
# endif

/* Assume that all systems that can run configure have sys/param.h.  */
# ifndef HAVE_SYS_PARAM_H
#  define HAVE_SYS_PARAM_H 1
# endif

# ifdef _SC_PAGESIZE
#  define getpagesize() sysconf(_SC_PAGESIZE)
# else /* no _SC_PAGESIZE */
#  ifdef HAVE_SYS_PARAM_H
#   include <sys/param.h>
#   ifdef EXEC_PAGESIZE
#    define getpagesize() EXEC_PAGESIZE
#   else /* no EXEC_PAGESIZE */
#    ifdef NBPG
#     define getpagesize() NBPG * CLSIZE
#     ifndef CLSIZE
#      define CLSIZE 1
#     endif /* no CLSIZE */
#    else /* no NBPG */
#     ifdef NBPC
#      define getpagesize() NBPC
#     else /* no NBPC */
#      ifdef PAGESIZE
#       define getpagesize() PAGESIZE
#      endif /* PAGESIZE */
#     endif /* no NBPC */
#    endif /* no NBPG */
#   endif /* no EXEC_PAGESIZE */
#  else /* no HAVE_SYS_PARAM_H */
#   define getpagesize() 8192	/* punt totally */
#  endif /* no HAVE_SYS_PARAM_H */
# endif /* no _SC_PAGESIZE */

#endif /* no HAVE_GETPAGESIZE */

#ifdef __cplusplus
extern "C" { void *malloc(unsigned); }
#else
char *malloc();
#endif

int
main()
{
	char *data, *data2, *data3;
	int i, pagesize;
	int fd;

	pagesize = getpagesize();

	/*
	 * First, make a file with some known garbage in it.
	 */
	data = malloc(pagesize);
	if (!data)
		exit(1);
	for (i = 0; i < pagesize; ++i)
		*(data + i) = rand();
	umask(0);
	fd = creat("conftestmmap", 0600);
	if (fd < 0)
		exit(1);
	if (write(fd, data, pagesize) != pagesize)
		exit(1);
	close(fd);

	/*
	 * Next, try to mmap the file at a fixed address which
	 * already has something else allocated at it.  If we can,
	 * also make sure that we see the same garbage.
	 */
	fd = open("conftestmmap", O_RDWR);
	if (fd < 0)
		exit(1);
	data2 = malloc(2 * pagesize);
	if (!data2)
		exit(1);
	data2 += (pagesize - ((int) data2 & (pagesize - 1))) & (pagesize - 1);
	if (data2 != mmap(data2, pagesize, PROT_READ | PROT_WRITE,
	    MAP_PRIVATE | MAP_FIXED, fd, 0L))
		exit(1);
	for (i = 0; i < pagesize; ++i)
		if (*(data + i) != *(data2 + i))
			exit(1);

	/*
	 * Finally, make sure that changes to the mapped area
	 * do not percolate back to the file as seen by read().
	 * (This is a bug on some variants of i386 svr4.0.)
	 */
	for (i = 0; i < pagesize; ++i)
		*(data2 + i) = *(data2 + i) + 1;
	data3 = malloc(pagesize);
	if (!data3)
		exit(1);
	if (read(fd, data3, pagesize) != pagesize)
		exit(1);
	for (i = 0; i < pagesize; ++i)
		if (*(data + i) != *(data3 + i))
			exit(1);
	close(fd);
	unlink("conftestmmap");
	exit(0);
}

configure:2877: checking for btowc
configure:2905: gcc -o conftest -O3 -arch m68k -arch i386 -arch hppa -arch sparc   -arch m68k -arch i386 -arch hppa -arch sparc  conftest.c  1>&5
ld: for architecture m68k
ld: Undefined symbols:
_btowc
configure: failed program was:
#line 2882 "configure"
#include "confdefs.h"
/* System header to define __stub macros and hopefully few prototypes,
    which can conflict with char btowc(); below.  */
#include <assert.h>
/* Override any gcc2 internal prototype to avoid an error.  */
/* We use char because int might match the return type of a gcc2
    builtin and then its argument prototype would still apply.  */
char btowc();

int main() {

/* The GNU C library defines this for functions which it implements
    to always fail with ENOSYS.  Some functions are actually named
    something starting with __ and the normal name is an alias.  */
#if defined (__stub_btowc) || defined (__stub___btowc)
choke me
#else
btowc();
#endif

; return 0; }
configure:2877: checking for isascii
configure:2905: gcc -o conftest -O3 -arch m68k -arch i386 -arch hppa -arch sparc   -arch m68k -arch i386 -arch hppa -arch sparc  conftest.c  1>&5
ld: for architecture m68k
ld: Undefined symbols:
_isascii
configure: failed program was:
#line 2882 "configure"
#include "confdefs.h"
/* System header to define __stub macros and hopefully few prototypes,
    which can conflict with char isascii(); below.  */
#include <assert.h>
/* Override any gcc2 internal prototype to avoid an error.  */
/* We use char because int might match the return type of a gcc2
    builtin and then its argument prototype would still apply.  */
char isascii();

int main() {

/* The GNU C library defines this for functions which it implements
    to always fail with ENOSYS.  Some functions are actually named
    something starting with __ and the normal name is an alias.  */
#if defined (__stub_isascii) || defined (__stub___isascii)
choke me
#else
isascii();
#endif

; return 0; }
configure:2877: checking for memmove
configure:2905: gcc -o conftest -O3 -arch m68k -arch i386 -arch hppa -arch sparc   -arch m68k -arch i386 -arch hppa -arch sparc  conftest.c  1>&5
configure:2877: checking for setmode
configure:2905: gcc -o conftest -O3 -arch m68k -arch i386 -arch hppa -arch sparc   -arch m68k -arch i386 -arch hppa -arch sparc  conftest.c  1>&5
ld: for architecture m68k
ld: Undefined symbols:
_setmode
configure: failed program was:
#line 2882 "configure"
#include "confdefs.h"
/* System header to define __stub macros and hopefully few prototypes,
    which can conflict with char setmode(); below.  */
#include <assert.h>
/* Override any gcc2 internal prototype to avoid an error.  */
/* We use char because int might match the return type of a gcc2
    builtin and then its argument prototype would still apply.  */
char setmode();

int main() {

/* The GNU C library defines this for functions which it implements
    to always fail with ENOSYS.  Some functions are actually named
    something starting with __ and the normal name is an alias.  */
#if defined (__stub_setmode) || defined (__stub___setmode)
choke me
#else
setmode();
#endif

; return 0; }
configure:2877: checking for strerror
configure:2905: gcc -o conftest -O3 -arch m68k -arch i386 -arch hppa -arch sparc   -arch m68k -arch i386 -arch hppa -arch sparc  conftest.c  1>&5
configure:2877: checking for wctype
configure:2905: gcc -o conftest -O3 -arch m68k -arch i386 -arch hppa -arch sparc   -arch m68k -arch i386 -arch hppa -arch sparc  conftest.c  1>&5
ld: for architecture m68k
ld: Undefined symbols:
_wctype
configure: failed program was:
#line 2882 "configure"
#include "confdefs.h"
/* System header to define __stub macros and hopefully few prototypes,
    which can conflict with char wctype(); below.  */
#include <assert.h>
/* Override any gcc2 internal prototype to avoid an error.  */
/* We use char because int might match the return type of a gcc2
    builtin and then its argument prototype would still apply.  */
char wctype();

int main() {

/* The GNU C library defines this for functions which it implements
    to always fail with ENOSYS.  Some functions are actually named
    something starting with __ and the normal name is an alias.  */
#if defined (__stub_wctype) || defined (__stub___wctype)
choke me
#else
wctype();
#endif

; return 0; }
configure:2932: checking for memchr
configure:2960: gcc -o conftest -O3 -arch m68k -arch i386 -arch hppa -arch sparc   -arch m68k -arch i386 -arch hppa -arch sparc  conftest.c  1>&5
configure:2932: checking for stpcpy
configure:2960: gcc -o conftest -O3 -arch m68k -arch i386 -arch hppa -arch sparc   -arch m68k -arch i386 -arch hppa -arch sparc  conftest.c  1>&5
ld: for architecture m68k
ld: Undefined symbols:
_stpcpy
configure: failed program was:
#line 2937 "configure"
#include "confdefs.h"
/* System header to define __stub macros and hopefully few prototypes,
    which can conflict with char stpcpy(); below.  */
#include <assert.h>
/* Override any gcc2 internal prototype to avoid an error.  */
/* We use char because int might match the return type of a gcc2
    builtin and then its argument prototype would still apply.  */
char stpcpy();

int main() {

/* The GNU C library defines this for functions which it implements
    to always fail with ENOSYS.  Some functions are actually named
    something starting with __ and the normal name is an alias.  */
#if defined (__stub_stpcpy) || defined (__stub___stpcpy)
choke me
#else
stpcpy();
#endif

; return 0; }
configure:3001: checking for inline
configure:3015: gcc -c -O3 -arch m68k -arch i386 -arch hppa -arch sparc   conftest.c 1>&5
configure:3041: checking for off_t
configure:3079: checking for argz.h
configure:3089: gcc -E -traditional-cpp  conftest.c >/dev/null 2>conftest.out
configure:3085: argz.h: No such file or directory
configure: failed program was:
#line 3084 "configure"
#include "confdefs.h"
#include <argz.h>
configure:3079: checking for limits.h
configure:3089: gcc -E -traditional-cpp  conftest.c >/dev/null 2>conftest.out
configure:3079: checking for locale.h
configure:3089: gcc -E -traditional-cpp  conftest.c >/dev/null 2>conftest.out
configure:3079: checking for nl_types.h
configure:3089: gcc -E -traditional-cpp  conftest.c >/dev/null 2>conftest.out
configure:3085: nl_types.h: No such file or directory
configure: failed program was:
#line 3084 "configure"
#include "confdefs.h"
#include <nl_types.h>
configure:3079: checking for malloc.h
configure:3089: gcc -E -traditional-cpp  conftest.c >/dev/null 2>conftest.out
configure:3085: malloc.h: No such file or directory
configure: failed program was:
#line 3084 "configure"
#include "confdefs.h"
#include <malloc.h>
configure:3079: checking for string.h
configure:3079: checking for unistd.h
configure:3079: checking for sys/param.h
configure:3119: checking for getcwd
configure:3147: gcc -o conftest -O3 -arch m68k -arch i386 -arch hppa -arch sparc   -arch m68k -arch i386 -arch hppa -arch sparc  conftest.c  1>&5
ld: for architecture m68k
ld: Undefined symbols:
_getcwd
configure: failed program was:
#line 3124 "configure"
#include "confdefs.h"
/* System header to define __stub macros and hopefully few prototypes,
    which can conflict with char getcwd(); below.  */
#include <assert.h>
/* Override any gcc2 internal prototype to avoid an error.  */
/* We use char because int might match the return type of a gcc2
    builtin and then its argument prototype would still apply.  */
char getcwd();

int main() {

/* The GNU C library defines this for functions which it implements
    to always fail with ENOSYS.  Some functions are actually named
    something starting with __ and the normal name is an alias.  */
#if defined (__stub_getcwd) || defined (__stub___getcwd)
choke me
#else
getcwd();
#endif

; return 0; }
configure:3119: checking for munmap
configure:3147: gcc -o conftest -O3 -arch m68k -arch i386 -arch hppa -arch sparc   -arch m68k -arch i386 -arch hppa -arch sparc  conftest.c  1>&5
ld: for architecture m68k
ld: Undefined symbols:
_munmap
configure: failed program was:
#line 3124 "configure"
#include "confdefs.h"
/* System header to define __stub macros and hopefully few prototypes,
    which can conflict with char munmap(); below.  */
#include <assert.h>
/* Override any gcc2 internal prototype to avoid an error.  */
/* We use char because int might match the return type of a gcc2
    builtin and then its argument prototype would still apply.  */
char munmap();

int main() {

/* The GNU C library defines this for functions which it implements
    to always fail with ENOSYS.  Some functions are actually named
    something starting with __ and the normal name is an alias.  */
#if defined (__stub_munmap) || defined (__stub___munmap)
choke me
#else
munmap();
#endif

; return 0; }
configure:3119: checking for putenv
configure:3147: gcc -o conftest -O3 -arch m68k -arch i386 -arch hppa -arch sparc   -arch m68k -arch i386 -arch hppa -arch sparc  conftest.c  1>&5
ld: for architecture m68k
ld: Undefined symbols:
_putenv
configure: failed program was:
#line 3124 "configure"
#include "confdefs.h"
/* System header to define __stub macros and hopefully few prototypes,
    which can conflict with char putenv(); below.  */
#include <assert.h>
/* Override any gcc2 internal prototype to avoid an error.  */
/* We use char because int might match the return type of a gcc2
    builtin and then its argument prototype would still apply.  */
char putenv();

int main() {

/* The GNU C library defines this for functions which it implements
    to always fail with ENOSYS.  Some functions are actually named
    something starting with __ and the normal name is an alias.  */
#if defined (__stub_putenv) || defined (__stub___putenv)
choke me
#else
putenv();
#endif

; return 0; }
configure:3119: checking for setenv
configure:3147: gcc -o conftest -O3 -arch m68k -arch i386 -arch hppa -arch sparc   -arch m68k -arch i386 -arch hppa -arch sparc  conftest.c  1>&5
ld: for architecture m68k
ld: Undefined symbols:
_setenv
configure: failed program was:
#line 3124 "configure"
#include "confdefs.h"
/* System header to define __stub macros and hopefully few prototypes,
    which can conflict with char setenv(); below.  */
#include <assert.h>
/* Override any gcc2 internal prototype to avoid an error.  */
/* We use char because int might match the return type of a gcc2
    builtin and then its argument prototype would still apply.  */
char setenv();

int main() {

/* The GNU C library defines this for functions which it implements
    to always fail with ENOSYS.  Some functions are actually named
    something starting with __ and the normal name is an alias.  */
#if defined (__stub_setenv) || defined (__stub___setenv)
choke me
#else
setenv();
#endif

; return 0; }
configure:3119: checking for setlocale
configure:3147: gcc -o conftest -O3 -arch m68k -arch i386 -arch hppa -arch sparc   -arch m68k -arch i386 -arch hppa -arch sparc  conftest.c  1>&5
configure:3119: checking for strchr
configure:3147: gcc -o conftest -O3 -arch m68k -arch i386 -arch hppa -arch sparc   -arch m68k -arch i386 -arch hppa -arch sparc  conftest.c  1>&5
configure:3119: checking for strcasecmp
configure:3147: gcc -o conftest -O3 -arch m68k -arch i386 -arch hppa -arch sparc   -arch m68k -arch i386 -arch hppa -arch sparc  conftest.c  1>&5
configure:3119: checking for strdup
configure:3147: gcc -o conftest -O3 -arch m68k -arch i386 -arch hppa -arch sparc   -arch m68k -arch i386 -arch hppa -arch sparc  conftest.c  1>&5
ld: for architecture m68k
ld: Undefined symbols:
_strdup
configure: failed program was:
#line 3124 "configure"
#include "confdefs.h"
/* System header to define __stub macros and hopefully few prototypes,
    which can conflict with char strdup(); below.  */
#include <assert.h>
/* Override any gcc2 internal prototype to avoid an error.  */
/* We use char because int might match the return type of a gcc2
    builtin and then its argument prototype would still apply.  */
char strdup();

int main() {

/* The GNU C library defines this for functions which it implements
    to always fail with ENOSYS.  Some functions are actually named
    something starting with __ and the normal name is an alias.  */
#if defined (__stub_strdup) || defined (__stub___strdup)
choke me
#else
strdup();
#endif

; return 0; }
configure:3119: checking for __argz_count
configure:3147: gcc -o conftest -O3 -arch m68k -arch i386 -arch hppa -arch sparc   -arch m68k -arch i386 -arch hppa -arch sparc  conftest.c  1>&5
ld: for architecture m68k
ld: Undefined symbols:
___argz_count
configure: failed program was:
#line 3124 "configure"
#include "confdefs.h"
/* System header to define __stub macros and hopefully few prototypes,
    which can conflict with char __argz_count(); below.  */
#include <assert.h>
/* Override any gcc2 internal prototype to avoid an error.  */
/* We use char because int might match the return type of a gcc2
    builtin and then its argument prototype would still apply.  */
char __argz_count();

int main() {

/* The GNU C library defines this for functions which it implements
    to always fail with ENOSYS.  Some functions are actually named
    something starting with __ and the normal name is an alias.  */
#if defined (__stub___argz_count) || defined (__stub_____argz_count)
choke me
#else
__argz_count();
#endif

; return 0; }
configure:3119: checking for __argz_stringify
configure:3147: gcc -o conftest -O3 -arch m68k -arch i386 -arch hppa -arch sparc   -arch m68k -arch i386 -arch hppa -arch sparc  conftest.c  1>&5
ld: for architecture m68k
ld: Undefined symbols:
___argz_stringify
configure: failed program was:
#line 3124 "configure"
#include "confdefs.h"
/* System header to define __stub macros and hopefully few prototypes,
    which can conflict with char __argz_stringify(); below.  */
#include <assert.h>
/* Override any gcc2 internal prototype to avoid an error.  */
/* We use char because int might match the return type of a gcc2
    builtin and then its argument prototype would still apply.  */
char __argz_stringify();

int main() {

/* The GNU C library defines this for functions which it implements
    to always fail with ENOSYS.  Some functions are actually named
    something starting with __ and the normal name is an alias.  */
#if defined (__stub___argz_stringify) || defined (__stub_____argz_stringify)
choke me
#else
__argz_stringify();
#endif

; return 0; }
configure:3119: checking for __argz_next
configure:3147: gcc -o conftest -O3 -arch m68k -arch i386 -arch hppa -arch sparc   -arch m68k -arch i386 -arch hppa -arch sparc  conftest.c  1>&5
ld: for architecture m68k
ld: Undefined symbols:
___argz_next
configure: failed program was:
#line 3124 "configure"
#include "confdefs.h"
/* System header to define __stub macros and hopefully few prototypes,
    which can conflict with char __argz_next(); below.  */
#include <assert.h>
/* Override any gcc2 internal prototype to avoid an error.  */
/* We use char because int might match the return type of a gcc2
    builtin and then its argument prototype would still apply.  */
char __argz_next();

int main() {

/* The GNU C library defines this for functions which it implements
    to always fail with ENOSYS.  Some functions are actually named
    something starting with __ and the normal name is an alias.  */
#if defined (__stub___argz_next) || defined (__stub_____argz_next)
choke me
#else
__argz_next();
#endif

; return 0; }
configure:3238: checking for LC_MESSAGES
configure:3250: gcc -o conftest -O3 -arch m68k -arch i386 -arch hppa -arch sparc   -arch m68k -arch i386 -arch hppa -arch sparc  conftest.c  1>&5
For architecture m68k:
configure: In function `main':
configure:3247: `LC_MESSAGES' undeclared (first use this function)
configure:3247: (Each undeclared identifier is reported only once
configure:3247: for each function it appears in.)
configure: failed program was:
#line 3243 "configure"
#include "confdefs.h"
#include <locale.h>
int main() {
return LC_MESSAGES
; return 0; }
configure:3271: checking whether NLS is requested
configure:3291: checking whether included gettext is requested
configure:3310: checking for libintl.h
configure:3656: checking whether catgets can be used
configure:3928: checking for msgfmt
configure:3962: checking for gmsgfmt
configure:3998: checking for xgettext
configure:4095: checking for catalogs to be installed
configure:4207: checking for dos file convention
configure:4226: checking for Cygwin environment
configure:4242: gcc -c -O3 -arch m68k -arch i386 -arch hppa -arch sparc   conftest.c 1>&5
For architecture m68k:
configure: In function `main':
configure:4238: `__CYGWIN32__' undeclared (first use this function)
configure:4238: (Each undeclared identifier is reported only once
configure:4238: for each function it appears in.)
configure: failed program was:
#line 4231 "configure"
#include "confdefs.h"

int main() {

#ifndef __CYGWIN__
#define __CYGWIN__ __CYGWIN32__
#endif
return __CYGWIN__;
; return 0; }
configure:4259: checking for mingw32 environment
configure:4271: gcc -c -O3 -arch m68k -arch i386 -arch hppa -arch sparc   conftest.c 1>&5
For architecture m68k:
configure: In function `main':
configure:4267: `__MINGW32__' undeclared (first use this function)
configure:4267: (Each undeclared identifier is reported only once
configure:4267: for each function it appears in.)
configure: failed program was:
#line 4264 "configure"
#include "confdefs.h"

int main() {
return __MINGW32__;
; return 0; }
configure:4288: checking for DJGPP environment
configure:4300: gcc -c -O3 -arch m68k -arch i386 -arch hppa -arch sparc   conftest.c 1>&5
For architecture m68k:
configure: In function `main':
configure:4296: `__DJGPP__' undeclared (first use this function)
configure:4296: (Each undeclared identifier is reported only once
configure:4296: for each function it appears in.)
configure: failed program was:
#line 4293 "configure"
#include "confdefs.h"

int main() {
 return __DJGPP__;
; return 0; }
configure:4320: checking for environ variable separator
configure:4339: checking for executable suffix
configure:4349: gcc -o conftest -O3 -arch m68k -arch i386 -arch hppa -arch sparc   -arch m68k -arch i386 -arch hppa -arch sparc  conftest.c  1>&5
configure:4370: checking for object suffix
configure:4376: gcc -c -O3 -arch m68k -arch i386 -arch hppa -arch sparc   conftest.c 1>&5
configure:4406: checking for working re_compile_pattern
configure:4439: gcc -o conftest -O3 -arch m68k -arch i386 -arch hppa -arch sparc   -arch m68k -arch i386 -arch hppa -arch sparc  conftest.c  1>&5
For architecture m68k:
configure: In function `main':
configure:4421: storage size of `regex' isn't known
configure:4423: `RE_SYNTAX_POSIX_EGREP' undeclared (first use this function)
configure:4423: (Each undeclared identifier is reported only once
configure:4423: for each function it appears in.)
configure:4426: warning: assignment makes pointer from integer without a cast
configure:4432: warning: assignment makes pointer from integer without a cast
configure: failed program was:
#line 4414 "configure"
#include "confdefs.h"
	
#include <stdio.h>
#include <regex.h>
	  int
	  main ()
	  {
	    static struct re_pattern_buffer regex;
	    const char *s;
	    re_set_syntax (RE_SYNTAX_POSIX_EGREP);
	    /* Add this third left square bracket, , to balance the
	       three right ones below.  Otherwise autoconf-2.14 chokes.  */
	    s = re_compile_pattern ("a[[:]:]b\n", 9, &regex);
	    /* This should fail with _Invalid character class name_ error.  */
	    if (!s)
	      exit (1);

	    /* This should succeed, but doesn't for e.g. glibc-2.1.3.  */
	    s = re_compile_pattern ("{1", 2, &regex);

	   exit (s ? 1 : 0);
	  }
	
