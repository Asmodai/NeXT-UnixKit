This file contains any messages produced by compilers while
running configure, to aid debugging if configure makes a mistake.

configure:557: checking for a BSD compatible install
configure:610: checking whether build environment is sane
configure:667: checking whether make sets ${MAKE}
configure:713: checking for working aclocal
configure:726: checking for working autoconf
configure:739: checking for working automake
configure:752: checking for working autoheader
configure:765: checking for working makeinfo
configure:781: checking for gcc
configure:858: checking whether the C compiler (gcc -O3 -arch m68k -arch i386 -arch hppa -arch sparc  -arch m68k -arch i386 -arch hppa -arch sparc ) works
configure:872: gcc -o conftest -O3 -arch m68k -arch i386 -arch hppa -arch sparc   -arch m68k -arch i386 -arch hppa -arch sparc  conftest.c  1>&5
configure:892: checking whether the C compiler (gcc -O3 -arch m68k -arch i386 -arch hppa -arch sparc  -arch m68k -arch i386 -arch hppa -arch sparc ) is a cross-compiler
configure:897: checking whether we are using GNU C
configure:906: gcc -E conftest.c
configure:921: checking whether gcc accepts -g
configure:951: checking for ranlib
configure:981: checking whether large file support needs explicit enabling
configure:1012: checking how to run the C preprocessor
configure:1033: gcc -E  conftest.c >/dev/null 2>conftest.out
configure:1029: undefined type, found `Syntax'
configure:1029: illegal external declaration, missing `;' after `Error'
configure: failed program was:
#line 1027 "configure"
#include "confdefs.h"
#include <assert.h>
Syntax Error
configure:1050: gcc -E -traditional-cpp  conftest.c >/dev/null 2>conftest.out
configure:1074: checking for minix/config.h
configure:1084: gcc -E -traditional-cpp  conftest.c >/dev/null 2>conftest.out
configure:1080: minix/config.h: No such file or directory
configure: failed program was:
#line 1079 "configure"
#include "confdefs.h"
#include <minix/config.h>
configure:1122: checking for AIX
configure:1146: checking for strerror in -lcposix
configure:1165: gcc -o conftest -O3 -arch m68k -arch i386 -arch hppa -arch sparc   -arch m68k -arch i386 -arch hppa -arch sparc  conftest.c -lcposix   1>&5
ld: for architecture m68k
ld: can't locate file for: -lcposix
configure: failed program was:
#line 1154 "configure"
#include "confdefs.h"
/* Override any gcc2 internal prototype to avoid an error.  */
/* We use char because int might match the return type of a gcc2
    builtin and then its argument prototype would still apply.  */
char strerror();

int main() {
strerror()
; return 0; }
configure:1194: checking for ANSI C header files
configure:1207: gcc -E -traditional-cpp  conftest.c >/dev/null 2>conftest.out
configure:1274: gcc -o conftest -O3 -arch m68k -arch i386 -arch hppa -arch sparc   -arch m68k -arch i386 -arch hppa -arch sparc  conftest.c  1>&5
configure:1301: checking for string.h
configure:1311: gcc -E -traditional-cpp  conftest.c >/dev/null 2>conftest.out
configure:1301: checking for stdlib.h
configure:1311: gcc -E -traditional-cpp  conftest.c >/dev/null 2>conftest.out
configure:1301: checking for limits.h
configure:1311: gcc -E -traditional-cpp  conftest.c >/dev/null 2>conftest.out
configure:1301: checking for unistd.h
configure:1311: gcc -E -traditional-cpp  conftest.c >/dev/null 2>conftest.out
configure:1301: checking for memory.h
configure:1311: gcc -E -traditional-cpp  conftest.c >/dev/null 2>conftest.out
configure:1301: checking for sys/types.h
configure:1311: gcc -E -traditional-cpp  conftest.c >/dev/null 2>conftest.out
configure:1338: checking for working const
configure:1392: gcc -c -O3 -arch m68k -arch i386 -arch hppa -arch sparc   conftest.c 1>&5
configure:1413: checking for size_t
configure:1447: checking which regex library to use
configure:1590: checking for working alloca.h
configure:1602: gcc -o conftest -O3 -arch m68k -arch i386 -arch hppa -arch sparc   -arch m68k -arch i386 -arch hppa -arch sparc  conftest.c  1>&5
For architecture m68k:
configure:1596: header file 'alloca.h' not found
configure: failed program was:
#line 1595 "configure"
#include "confdefs.h"
#include <alloca.h>
int main() {
char *p = alloca(2 * sizeof(int));
; return 0; }
configure:1623: checking for alloca
configure:1651: gcc -o conftest -O3 -arch m68k -arch i386 -arch hppa -arch sparc   -arch m68k -arch i386 -arch hppa -arch sparc  conftest.c  1>&5
configure:1820: checking for unistd.h
configure:1859: checking for getpagesize
configure:1887: gcc -o conftest -O3 -arch m68k -arch i386 -arch hppa -arch sparc   -arch m68k -arch i386 -arch hppa -arch sparc  conftest.c  1>&5
configure:1912: checking for working mmap
configure:2060: gcc -o conftest -O3 -arch m68k -arch i386 -arch hppa -arch sparc   -arch m68k -arch i386 -arch hppa -arch sparc  conftest.c  1>&5
For architecture m68k:
configure: In function `main':
configure:2032: `MAP_FIXED' undeclared (first use this function)
configure:2032: (Each undeclared identifier is reported only once
configure:2032: for each function it appears in.)
configure:2032: warning: comparison between pointer and integer
configure: failed program was:
#line 1920 "configure"
#include "confdefs.h"

/* Thanks to Mike Haertel and Jim Avera for this test.
   Here is a matrix of mmap possibilities:
	mmap private not fixed
	mmap private fixed at somewhere currently unmapped
	mmap private fixed at somewhere already mapped
	mmap shared not fixed
	mmap shared fixed at somewhere currently unmapped
	mmap shared fixed at somewhere already mapped
   For private mappings, we should verify that changes cannot be read()
   back from the file, nor mmap's back from the file at a different
   address.  (There have been systems where private was not correctly
   implemented like the infamous i386 svr4.0, and systems where the
   VM page cache was not coherent with the filesystem buffer cache
   like early versions of FreeBSD and possibly contemporary NetBSD.)
   For shared mappings, we should conversely verify that changes get
   propogated back to all the places they're supposed to be.

   Grep wants private fixed already mapped.
   The main things grep needs to know about mmap are:
   * does it exist and is it safe to write into the mmap'd area
   * how to use it (BSD variants)  */
#include <sys/types.h>
#include <fcntl.h>
#include <sys/mman.h>

/* This mess was copied from the GNU getpagesize.h.  */
#ifndef HAVE_GETPAGESIZE
# ifdef HAVE_UNISTD_H
#  include <unistd.h>
# endif

/* Assume that all systems that can run configure have sys/param.h.  */
# ifndef HAVE_SYS_PARAM_H
#  define HAVE_SYS_PARAM_H 1
# endif

# ifdef _SC_PAGESIZE
#  define getpagesize() sysconf(_SC_PAGESIZE)
# else /* no _SC_PAGESIZE */
#  ifdef HAVE_SYS_PARAM_H
#   include <sys/param.h>
#   ifdef EXEC_PAGESIZE
#    define getpagesize() EXEC_PAGESIZE
#   else /* no EXEC_PAGESIZE */
#    ifdef NBPG
#     define getpagesize() NBPG * CLSIZE
#     ifndef CLSIZE
#      define CLSIZE 1
#     endif /* no CLSIZE */
#    else /* no NBPG */
#     ifdef NBPC
#      define getpagesize() NBPC
#     else /* no NBPC */
#      ifdef PAGESIZE
#       define getpagesize() PAGESIZE
#      endif /* PAGESIZE */
#     endif /* no NBPC */
#    endif /* no NBPG */
#   endif /* no EXEC_PAGESIZE */
#  else /* no HAVE_SYS_PARAM_H */
#   define getpagesize() 8192	/* punt totally */
#  endif /* no HAVE_SYS_PARAM_H */
# endif /* no _SC_PAGESIZE */

#endif /* no HAVE_GETPAGESIZE */

#ifdef __cplusplus
extern "C" { void *malloc(unsigned); }
#else
char *malloc();
#endif

int
main()
{
	char *data, *data2, *data3;
	int i, pagesize;
	int fd;

	pagesize = getpagesize();

	/*
	 * First, make a file with some known garbage in it.
	 */
	data = malloc(pagesize);
	if (!data)
		exit(1);
	for (i = 0; i < pagesize; ++i)
		*(data + i) = rand();
	umask(0);
	fd = creat("conftestmmap", 0600);
	if (fd < 0)
		exit(1);
	if (write(fd, data, pagesize) != pagesize)
		exit(1);
	close(fd);

	/*
	 * Next, try to mmap the file at a fixed address which
	 * already has something else allocated at it.  If we can,
	 * also make sure that we see the same garbage.
	 */
	fd = open("conftestmmap", O_RDWR);
	if (fd < 0)
		exit(1);
	data2 = malloc(2 * pagesize);
	if (!data2)
		exit(1);
	data2 += (pagesize - ((int) data2 & (pagesize - 1))) & (pagesize - 1);
	if (data2 != mmap(data2, pagesize, PROT_READ | PROT_WRITE,
	    MAP_PRIVATE | MAP_FIXED, fd, 0L))
		exit(1);
	for (i = 0; i < pagesize; ++i)
		if (*(data + i) != *(data2 + i))
			exit(1);

	/*
	 * Finally, make sure that changes to the mapped area
	 * do not percolate back to the file as seen by read().
	 * (This is a bug on some variants of i386 svr4.0.)
	 */
	for (i = 0; i < pagesize; ++i)
		*(data2 + i) = *(data2 + i) + 1;
	data3 = malloc(pagesize);
	if (!data3)
		exit(1);
	if (read(fd, data3, pagesize) != pagesize)
		exit(1);
	for (i = 0; i < pagesize; ++i)
		if (*(data + i) != *(data3 + i))
			exit(1);
	close(fd);
	unlink("conftestmmap");
	exit(0);
}

configure:2083: checking for vprintf
configure:2111: gcc -o conftest -O3 -arch m68k -arch i386 -arch hppa -arch sparc   -arch m68k -arch i386 -arch hppa -arch sparc  conftest.c  1>&5
configure:2191: checking for memchr
configure:2219: gcc -o conftest -O3 -arch m68k -arch i386 -arch hppa -arch sparc   -arch m68k -arch i386 -arch hppa -arch sparc  conftest.c  1>&5
configure:2191: checking for memcmp
configure:2219: gcc -o conftest -O3 -arch m68k -arch i386 -arch hppa -arch sparc   -arch m68k -arch i386 -arch hppa -arch sparc  conftest.c  1>&5
For architecture m68k:
configure:2203: warning: conflicting types for built-in function `memcmp'
For architecture i386:
configure:2203: warning: conflicting types for built-in function `memcmp'
For architecture hppa:
configure:2203: warning: conflicting types for built-in function `memcmp'
For architecture sparc:
configure:2203: warning: conflicting types for built-in function `memcmp'
configure:2191: checking for memmove
configure:2219: gcc -o conftest -O3 -arch m68k -arch i386 -arch hppa -arch sparc   -arch m68k -arch i386 -arch hppa -arch sparc  conftest.c  1>&5
configure:2191: checking for strerror
configure:2219: gcc -o conftest -O3 -arch m68k -arch i386 -arch hppa -arch sparc   -arch m68k -arch i386 -arch hppa -arch sparc  conftest.c  1>&5
configure:2248: checking for isatty
configure:2276: gcc -o conftest -O3 -arch m68k -arch i386 -arch hppa -arch sparc   -arch m68k -arch i386 -arch hppa -arch sparc  conftest.c  1>&5
configure:2248: checking for bcopy
configure:2276: gcc -o conftest -O3 -arch m68k -arch i386 -arch hppa -arch sparc   -arch m68k -arch i386 -arch hppa -arch sparc  conftest.c  1>&5
configure:2248: checking for bzero
configure:2276: gcc -o conftest -O3 -arch m68k -arch i386 -arch hppa -arch sparc   -arch m68k -arch i386 -arch hppa -arch sparc  conftest.c  1>&5
configure:2248: checking for isascii
configure:2276: gcc -o conftest -O3 -arch m68k -arch i386 -arch hppa -arch sparc   -arch m68k -arch i386 -arch hppa -arch sparc  conftest.c  1>&5
ld: for architecture m68k
ld: Undefined symbols:
_isascii
configure: failed program was:
#line 2253 "configure"
#include "confdefs.h"
/* System header to define __stub macros and hopefully few prototypes,
    which can conflict with char isascii(); below.  */
#include <assert.h>
/* Override any gcc2 internal prototype to avoid an error.  */
/* We use char because int might match the return type of a gcc2
    builtin and then its argument prototype would still apply.  */
char isascii();

int main() {

/* The GNU C library defines this for functions which it implements
    to always fail with ENOSYS.  Some functions are actually named
    something starting with __ and the normal name is an alias.  */
#if defined (__stub_isascii) || defined (__stub___isascii)
choke me
#else
isascii();
#endif

; return 0; }
configure:2248: checking for memcpy
configure:2276: gcc -o conftest -O3 -arch m68k -arch i386 -arch hppa -arch sparc   -arch m68k -arch i386 -arch hppa -arch sparc  conftest.c  1>&5
For architecture m68k:
configure:2260: warning: conflicting types for built-in function `memcpy'
For architecture i386:
configure:2260: warning: conflicting types for built-in function `memcpy'
For architecture hppa:
configure:2260: warning: conflicting types for built-in function `memcpy'
For architecture sparc:
configure:2260: warning: conflicting types for built-in function `memcpy'
