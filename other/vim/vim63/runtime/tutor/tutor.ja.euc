===============================================================================
=    V I M 教 本 (チュートリアル) へ よ う こ そ        -    Version 1.5      =
===============================================================================

     Vim は、このチュートリアルで説明するには多すぎる程のコマンドを備えた
     非常に強力なエディターです。このチュートリアルは、あなたが Vim
     を万能エディターとして使いこなせるようになるのに十分なコマンドについて
     説明をするようなっています。

     チュートリアルを完了するのに必要な時間は、覚えたコマンドを試すのにどれ
     だけ時間を使うのかにもよりますが、およそ25〜30分です。

     学ぶコマンドにはこの文章を変更するものもあります。練習を始める前にコ
     ピーを作成しましょう("vimtutor"したならば、既にコピーされています)。

     このチュートリアルが、使うことで覚えられる仕組みになっていることを、心
     しておかなければなりません。正しく学習するにはコマンドを実際に試さなけ
     ればならないのです。文章を読んだだけならば、きっと忘れてしまいます!。

     さぁ、Capsロック(Shift-Lock)キーが押されていないことを確認した後、
     画面にレッスン1.1 が全部表示されるところまで、j キーを押してカーソルを
     移動しましょう。
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
			 レッスン 1.1:  カーソルの移動


       ** カーソルを移動するには、示される様に h,j,k,l を押します **
	     ^
	     k		    ヒント:  h キーは左方向に移動します。
       < h	 l >		     l キーは右方向に移動します。
	     j			     j キーは下矢印キーのようなキーです。
	     v
  1. 移動に慣れるまで、スクリーンでカーソル移動させましょう。

  2. 下へのキー(j)を押しつづけると、連続して移動できます。
---> これで次のレッスンに移動する方法がわかりましたね。

  3. 下へのキーを使って、レッスン1.2 に移動しましょう。

NOTE: 何をタイプしているか判らなくなったら、<ESC>を押してノーマルモードにしま
      す。それから入力しようとしていたコマンドを再入力しましょう。

NOTE: カーソルキーでも移動できます。しかし hjkl を使用することに一度慣れてしま
      えば、はるかに速く移動することができるでしょう。

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
			 レッスン 1.2: VIM の起動と終了


  !! NOTE: 以下のあらゆるステップを行う前に、このレッスンを読みましょう!!

  1. <ESC>キーを押しましょう。(確実にノーマルモードにするため)

  2. 次のようにタイプ:		:q! <ENTER>

---> これにより編集した内容を保存せずにエディタが終了します。
     編集内容を保存して終了するときは次のようにタイプします:
				:wq  <ENTER>

  3. シェルプロンプトからチュートリアルを始めるにはコマンドをタイプします。
     そのコマンドは:		vimtutor <ENTER>
     通常はこうでしょう:	vim tutor <ENTER>

---> 'vim' は Vim エディタの起動を、'tutor' は編集したいファイルを意味します。

  4. これまでのステップを覚え自信がついたならば、ステップ 1 から 3 までを実
     際に試して、Vim を1度終了してから再び起動しましょう。それからレッスン
     1.3までカーソルを移動させましょう。
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
		       レッスン 1.3: テキスト編集 - 削除


    ** ノーマルモードにてカーソルの下の文字を削除するには x を押します **

  1. 以下の ---> と記されたされた行にカーソルを移動しましょう。

  2. 間違いを修正するために、削除する最初の文字までカーソルを移動します。

  3. 不必要な文字を x を押して削除しましょう。

  4. 文が正しくなるまで ステップ 2 から 4 を繰り返しましょう。

---> その ううさぎ は つつきき を こええてて とびはねたた

  5. 行が正しくなったら、レッスン 1.4 に移りましょう。

NOTE: 全てのレッスンを通じて、覚えようとするのではなく実際にやってみましょう。




~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
		       レッスン 1.4: テキスト編集 - 挿入


	 ** ノーマルモードにてテキストを挿入するには i を押します **

  1. 以下の ---> と記されたされた最初の行にカーソルを移動しましょう。

  2. 1行目を2行目と同じ様にするために、テキストを挿入しなければならない位
     置の次の文字にカーソルを移動します。

  3. i キーを押してから、追加が必要な文字をタイプしましょう。

  4. 間違いを修正したら <ESC> を押してコマンドモードに戻り、正しい文に
     なる様にステップ 2 から 4 を繰り返しましょう。

---> この には 足りない テキスト ある。
---> この 行 には 幾つか 足りない テキスト が ある。

  5. 挿入の方法がわかったら下のレッスン1の要約を見ましょう。



~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
				レッスン 1 要約


  1. カーソルは矢印キーもしくは hjkl キーで移動します。
	 h (左)		j (下)         k (上)	    l (右)

  2. Vim を起動するにはプロンプトから vim ファイル名 <ENTER> とタイプします。

  3. Vim を終了するには	   <ESC> :q!	 <ENTER>  とタイプします(変更を破棄)。
               もしくは	   <ESC> :wq	 <ENTER>  とタイプします(変更を保存)。

  4. カーソルの下の文字を削除するには、ノーマルモードで x とタイプします。

  5. カーソルの位置に文字を挿入するには、ノーマルモードで i とタイプします。
	 i     テキストのタイプ	<ESC>

NOTE: <ESC> キーを押すとノーマルモードに移行します。その際、間違ったり入力途中
      のコマンドを取り消すことができます。

さて、続けてレッスン 2 を始めましょう。


~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
			   レッスン 2.1: 削除コマンド


	    ** 単語の末尾までを削除するには dw とタイプしましょう **

  1. ノーマルモードであることを確認するために <ESC> を押しましょう。

  2. 以下の ---> と記されたされた行にカーソルを移動しましょう。

  3. 消したい単語の先頭にカーソルを移動しましょう。

  4. 単語を削除するために dw とタイプしましょう。

  NOTE: タイプすると、dw という文字がスクリーンの最下行に現われます。
        タイプを間違ってしまった時には <ESC> を押してやり直しましょう。

---> この 文 紙 には いくつかの たのしい 必要のない 単語 が 含まれて います。

  5. 3 から 4 までを文が正しくなるまで繰り返し、レッスン 2.2 に移りましょう。



~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
		       レッスン 2.2: その他の削除コマンド


	     ** 行の末尾までを削除するには d$ とタイプしましょう **

  1. ノーマルモードであることを確認するのに <ESC> を押しましょう。

  2. 以下の ---> と記されたされた行にカーソルを移動しましょう。

  3. 正しい文の末尾へカーソルを移動しましょう(最初の . の後です)。

  4. 行末まで削除するのに d$ とタイプしましょう。

---> 誰かがこの行の最後を2度タイプしました。 2度タイプしました。


  5. どういうことか理解するために、レッスン 2.3 へ移りましょう。





~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
		       Lesson 2.3: コマンドと目的語


  削除コマンド d の形式は次の様になっています:

	 [回数]   d   目的語      もしくは      d   [回数]   目的語
  それぞれ:
    回数   - そのコマンドを何回繰り返すか(省略可能, 省略した時は =1)。
    d      - 削除コマンド。
    目的語 - 何に対して働きかけるか(以下に挙げます)。

  目的語一覧:
    w - カーソル位置から空白を含む単語の末尾まで。
    e - カーソル位置から空白を含まない単語の末尾まで。
    $ - カーソル位置から行末まで。

NOTE: 冒険したい人は、ノーマルモードにてコマンドなしに目的語を押して
      みましょう。カーソルが目的語一覧で示される位置に移動するはずです。




~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
		      レッスン 2.4: それ以外の形のコマンド


		** 行全体を削除するには dd とタイプしましょう **

  行全体の削除は頻繁に行なう作業なので、Vim の設計者は行を削除するのには、
  単に列内にて2回 d をタイプする方が簡単だろうと判断しました。

  1. 下にある一連のフレーズの2行目にカーソルを移動しましょう。
  2. dd  とタイプして行を削除しましょう。
  3. では4行目に移動してみましょう。
  4. 2dd  とタイプして2行削除してみましょう。
     (回数-コマンド-目的語  の形式を思い出しましょう)

      1)  バラは赤い、
      2)  つまらないものは楽しい、
      3)  スミレは青い、
      4)  私は車をもっている、
      5)  時計が時刻を告げる、
      6)  砂糖は甘い
      7)  オマエモナー

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
			 レッスン 2.5: やり直しコマンド


  ** 最後のコマンドを取り消すには u を押します。U は行全体の取消です。 **

  1. 以下の ---> と記されたされた行にカーソルを移動し、最初の間違いにカーソル
     を移動しましょう。
  2. x をタイプしていらない先頭の文字を削除しましょう。
  3. さぁ、u をタイプして最後に実行したコマンドを取り消しましょう。
  4. 今度は、x を使用して誤りを全て修正しましょう。
  5. 大文字の U をタイプして、行を元の状態に戻しましょう。
  6. u をタイプして直前の U コマンドを取消しましょう。
  7. ではコマンドを再実行するのに CTRL-R (CTRL を押したまま R を打つ)を
     数回タイプしてみましょう(取消の取消)。

---> このの行のの間違いを修正々し、後でそれらの修正をを取消しまますす。

  8. これはとても便利なコマンドです。さぁレッスン 2 要約に移りましょう。




~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
				レッスン 2 要約


  1. カーソル位置から単語の末尾までを削除するには dw とタイプします。

  2. カーソル位置から行の末尾までを削除するには d$ とタイプします。

  3. 行全体を削除するには dd とタイプします。

  4. ノーマルモードでのコマンド形式は

   [回数]   コマンド   目的語     もしくは    コマンド   [回数]   目的語
     それぞれ:
       回数     - そのコマンドを何回繰り返すか。
       コマンド - 削除 d の類で何をするか。
       目的語   - 単語 w や行末 $ などの類で何に対して働きかけるか。

  5. 前回の動作を取消す:	u   (小文字 u)
     行全体の変更を取消す:	U   (大文字 U)
     取消しの取消し:		CTRL-R


~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
			   レッスン 3.1: 貼り付けコマンド


    ** 最後に削除された行をカーソルの後に貼り付けるには p をタイプします **

  1. 以下の段落の最初の行にカーソルを移動しましょう。

  2. dd  とタイプして行を削除し、Vim のバッファに格納しましょう。

  3. 削除した行が本来あるべき位置の上の行まで、カーソルを移動させましょう。

  4. ノーマルモードで p をタイプして格納した行を画面に戻します。

  5. 順番が正しくなる様にステップ 2 から 4 を繰り返しましょう。

     d) 貴方も学ぶことができる?
     b) スミレは青い、
     c) 知恵とは学ぶもの、
     a) バラは赤い、



~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
			 レッスン 3.2: 置き換えコマンド


	   ** カーソルの下の文字を置き換えるには r をタイプします **

  1. 以下の ---> と記されたされた最初の行にカーソルを移動しましょう。

  2. 最初の間違いの先頭にカーソルを移動しましょう。

  3. r とタイプし、間違っている文字を置き換える、正しい文字をタイプしましょう。

  4. 最初の行が正しくなるまでステップ 2 から 3 を繰り返しましょう。

--->  この合を人力した時ね、その人は幾つか問違ったキーを押しもした!
--->  この行を入力した時に、その人は幾つか間違ったキーを押しました!

  5. さぁ、レッスン 3.2 に移りましょう。

NOTE: 実際に試しましょう。決して覚えるだけにはしないこと。



~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
			レッスン 3.3: 変更コマンド


	 ** 単語の一部、もしくは全体を変更するには cw とタイプします **

  1. 以下の ---> と記されたされた最初の行にカーソルを移動しましょう。

  2. lubw の u の位置にカーソルを移動しましょう。

  3. cw とタイプし、正しい単語をタイプしましょう(この場合 'ine' とタイプ)。

  4. 次の間違い(変更すべき文字の先頭)に移動するために <ESC> をタイプします。

  5. 最初の行が次の行の様になるまでステップ 3 と 4 を繰り返します。

---> This lubw has a few wptfd that mrrf changing usf the change command.
---> This line has a few words that need changing using the change command.

cw は単語を変更するだけでなく、挿入も行えることに注意しましょう。



~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
		     レッスン 3.4: c を使用したその他の変更


     ** 変更コマンドは、削除コマンドと同じ様にオブジェクトを使用します **


  1. 変更コマンドは、削除コマンドと同じような動作をします。その形式は

	 [回数]   c   目的語      もしくは      c   [回数]   目的語

  2. オブジェクトも同じで、w は単語、 $ は行末などといったものです。

  3. 以下の ---> と記されたされた行にカーソルを移動しましょう。

  4. 最初の間違いへカーソルを移動しましょう。

  5. c$ とタイプして行の残りを２行目の様にし、<ESC> を押しましょう。

---> The end of this line needs some help to make it like the second.
---> The end of this line needs to be corrected using the  c$  command.


~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
				レッスン 3 要約


  1. 既に削除されたテキストを再配置するには、p をタイプします。これは削除さ
     れたテキストをカーソルの後に挿入します(行単位で削除されたのならば、カー
     ソルのある次の行に挿入されます)。

  2. カーソルの下の文字を置き換えるには、r をタイプした後、それを置き換える
     文字をタイプします。

  3. 変更コマンドではカーソル位置から特定の目的語で指定される終端までを変更
     することが可能です。例えば cw ならばカーソル位置から単語の終わりまで、
     c$ ならば行の終わりまでを変更します。

  4. 変更コマンドの形式は

	 [回数]   c   目的語      もしくは      c   [回数]   目的語

さぁ、次のレッスンに移りましょう。



~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
		     レッスン 4.1: 位置とファイルの情報


  ** ファイル内での位置とファイルの状態を表示するには CTRL-g をタイプします。
     ファイル内のある行に移動するには SHIFT-G をタイプします **

     NOTE: ステップを実行する前に、このレッスン全てに目を通しましょう!!

  1. CTRL を押したまま g を押しましょう。ページの一番下にあるステータス行
     にファイル名と行が表示されるはずです。 ステップ 3 のために行番号を
     覚えておきましょう。(訳者注:ルーラーがある場合はそちらに注目)

  2. 最下行に移動するために shift-G とタイプしましょう。

  3. 先ほどの行の番号をタイプし、 shift-G をタイプしましょう。
     最初に Ctrl-g を押した行に戻って来るはずです。
     (数字をタイプしているときには画面に表示されません)

  4. 自信が持てたらステップ 1 から 3 を実行しましょう。



~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
			   レッスン 4.2: 検索コマンド


	 ** 語句を検索するには / と、前方検索する語句をタイプします。**

  1. ノーマルモードで / という文字をタイプします。画面一番下に : コマンド
     と同じ様に / が現れることに気づくでしょう。

  2. では、'errroor' <ENTER> とタイプしましょう。これが検索したい単語です。

  3. 同じ語をもう一度検索するときは 単に n をタイプします。
     逆方向に語句を検索するときは N をタイプします。

  4. 逆方向に語句を検索したい場合は、/ コマンドのかわりに ? コマンドを使用し
     ます。

---> "errroor" is not the way to spell error;  errroor is an error.

検索がファイルの終わりに達すると、ファイルの先頭から検索を続行します。



~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
		      レッスン 4.3: 対応する括弧を検索


	    ** 対応する ),] や } を検索するには % をタイプします **

  1. 以下の ---> と記されたされた行で (,[ か { のどれかにカーソルを移動
     しましょう。

  2. そこで % とタイプしましょう。

  3. カーソルは対応する括弧に移動するはずです。

  4. 最初の括弧に移動するには % とタイプしましょう。

---> This ( is a test line with ('s, ['s ] and {'s } in it. ))

NOTE: この機能は括弧が一致していないプログラムをデバッグするのにとても役立ち
      ます。




~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
		       レッスン 4.4: 間違いを変更する方法


	** 'old' を 'new' に置換するには :s/old/new/g とタイプします **

  1. 以下の ---> と記されたされた行にカーソルを移動しましょう。

  2. :s/thee/the <ENTER> とタイプしましょう。このコマンドはその行で最初に見
     つかったものにだけ行なわれることに気をつけましょう。

  3. では :s/thee/the/g	とタイプしましょう。行全体を置換することを意味します。
     この変更はその行で見つかった全ての箇所に対して行なわれます。

---> thee best time to see thee flowers is in thee spring.

  4. 複数行から見つかる文字を変更するには
     :#,#s/old/new/g    #,# は２行の行番号を指します。
     :%s/old/new/g      ファイル全体で見つかるものに対して変更する。




~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
				レッスン 4 要約


  1. Ctrl-g はファイルでの位置とファイルの詳細を表示します。
     Shift-G はファイルの最下行に移動します。行番号後に Shift-G とすると
     その行に移動します。

  2. / の後に語句をタイプすると前方に語句を検索します。
     ? の後に語句をタイプすると後方に語句を検索します。
     検索の後 n で、同方向に検索を再び行い、また N で逆方向に検索を行ないま
     す。

  3. (,),[,],{, or } 上にカーソルがある状態で % をタイプすると
     対応した対に移動します。

  4. 現在行の最初の old を new に置換する。	:s/old/new
     現在行の全ての old を new に置換する。	:s/old/new/g
     2つの # 間で語句を置換する。		:#,#s/old/new/g
     ファイルの中の全ての検索語句を置換する。	:%s/old/new/g
     'c' を加えると置換の度に確認を求める。	:%s/old/new/gc


~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
		    レッスン 5.1: 外部コマンドを実行する方法


	     ** :! の後に実行する外部コマンドをタイプします **

  1. 画面の最下部にカーソルが移動するよう、慣れ親しんだ : をタイプしましょう。
     これでコマンドがタイプできる様になります。

  2. ここで ! という文字(感嘆符)をタイプしましょう。
     これで外部シェルコマンドが実行できる様になります。

  3. 例として ! に続けて ls とタイプし <ENTER> を押しましょう。
     シェルプロンプトのようにディレクトリの一覧が表示されるはずです。
     もしくは ls が動かないならば :!dir を使用しましょう。

---> NOTE:  この方法によってあらゆるコマンドが実行することができます。

---> NOTE:  全ての : コマンドは <ENTER> を押して終了しなければなりません。




~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
		    レッスン 5.2: その他のファイルへ書き込み


	** ファイルへ変更を保存するには :w ファイル名 とタイプします **

  1. ディレクトリの一覧を得るために :!dir もしくは :!ls とタイプしましょう。
     このあと <ENTER> を押すのは既にご存知ですね。

  2. TEST のように、そのディレクトリに無いファイル名を一つ選びます。

  3. では :w TEST とタイプしましょう (TEST は、選んだファイル名です)。

  4. これによりファイル全体が TEST という名前で保存されます。
     もう一度 :!dir とタイプして確認してみましょう。

---> ここで Vim を終了し、ファイル名 TEST と共に起動すると、保存した時の
     チュートリアルの複製ができ上がるはずです。

  5. では、 :!del TEST とタイプしてファイルを削除してみましょう。



~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
			 レッスン 5.3: 選択した書き込み


	  ** 部分的に保存するには :#,# w ファイル名 とタイプします **

  1. もう一度ディレクトリの一覧を取得するために :!ls とタイプし、TEST の様に
     ファイルを一つ選んでみましょう。

  2. このページの始めまでカーソルを移動し、ファイルの行数を知るために Ctrl-g と
     タイプしましょう。その行番号を憶えておきましょう。

  3. そしてページの終りまで移動し、再度 Ctrl-g を行います。
     この行番号も憶えておきましょう。

  4. ある部分だけを TEST という名で保存するために、:#,# w TEST とタイプします。
     この #,# は覚えておいた２つの番号(上端,下端) であり、 TEST がファイル名
     となります。

  5. 再度、ファイルが存在することを確認するために :!dir とタイプしましょう。
     ただしこのファイルは消してはいけません。


~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
		       レッスン 5.4: ファイルの取込と合併


	** ファイルの中身を挿入するには :r ファイル名 とタイプします **

  1. 先ほどの TEST というファイルが存在することを確かめるために :!dir と
     タイプしましょう。

  2. カーソルをこのページの先頭に移動します。

NOTE: ステップ 3 を実行すると、画面に レッスン 5.3 が現われるので、カーソルを
    下に移動しこのレッスンまで戻りましょう。

  3. では、:r TEST とタイプして TEST ファイルを取込みましょう。この TEST は
     ファイル名です。

NOTE:  ファイルの取込みはカーソルの位置から行われます。

  4. 取込んだファイルを確認してみましょう。カーソルを戻すと、レッスン5.3 の
     オリジナルとファイルによるものの2つがあることがわかります。


~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
			       レッスン 5 要約


  1.  :!command  によって 外部コマンドを実行します。

     よく使う例:
	  :!ls                -  ディレクトリのファイル一覧を見る。
	  :!del ファイル名    -  ファイル名というファイルの削除する。

  2.  :w ファイル名 によってファイル名というファイルがディスクに書き込まれる。

  3.  :#,# w ファイル名 によって # から # までを保存する。

  4.  :r ファイル名 によりファイル名というファイルがディスクより取込まれ、
      カーソル位置の下に挿入される。







~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
			 レッスン 6.1: オープンコマンド


    ** o をタイプすると、カーソルの下の行が開き、挿入モードに入ります **

  1. 以下の ---> と記されたされた行にカーソルを移動しましょう。

  2. o (小文字) をタイプして、カーソルの下の行を開き、挿入モードに入ります。

  3. ---> と記された行を写し、<ESC> とタイプして追加モードを終了しましょう。

---> o  をタイプするとカーソルは開いた行へ移動し挿入モードに入ります。

  4. カーソルの上の行に挿入するには、小文字の o ではなく、単純に大文字の O
     をタイプします。次の行で試してみましょう。
この行の上へ挿入するには、この行へカーソルを置いて Shift-O をタイプします。






~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
			レッスン 6.2: 追加コマンド


      ** カーソルの次の位置からテキストを追加するには a とタイプします **

  1. ノーマルモードにして以下の ---> と記されたされた最初の行で $ をタイプし
     て、終端にカーソルを移動しましょう。

  2. カーソルの文字の後ろにテキストを追加するために a (小文字) をタイプしま
     す。

NOTE: これは最後の文字にてテキストを挿入し、<ESC> をタイプしてカーソルを右に
      移動し、最後に x タイプして行末に追加するといったような i のタイプを
      避けることがきます。

  3. さて最初の行を完成しましょう。テキストが挿入される位置を除けば、
     追加コマンドは挿入モードとまったく同じです。

---> この行で、行末に文章を追加する
---> この行で、行末に文章を追加する練習をすることができるでしょう。


~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
			   レッスン 6.3: その他の置換


	  ** 1文字以上を置き換えるには大文字の R とタイプしましょう **

  1. 以下の ---> と記されたされた行にカーソルを移動しましょう。

  2. ---> と記された２行目と違う、最初の単語の先頭にカーソルを移動しましょう。
     (単語 'last')

  3. ここで R をタイプして、最初の行と次の行が同じになるように既存のテキスト
     へ上書きタイプし、１行目の残りの部分を書き換えましょう。

---> To make the first line the same as the last on this page use the keys.
---> To make the first line the same as the second, type R and the new text.

  4. モードを抜けるために <ESC> をタイプすると、変更していない部分が残ること
     に注意しましょう。




~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
		       レッスン 6.4: オプションの設定


  ** 検索や置換の際に大文字と小文字を無視する様にオプションを設定します **


  1. 以下の様にタイプして 'ignore' を検索しましょう:
       /ignore
     n を押して何度か検索を繰り返します。

  2. 以下の様にタイプして 'ic' (Ignore Case の略です) オプションを設定します。
       :set ic

  3. では n によってもう1度 'ignore' を検索します。
     n を押してさらに数回検索を繰り返しましょう。

  4. 'hlsearch' と 'incsearch' オプションを以下の様に設定しましょう。
       :set hls is

  5. もう一度検索コマンドを入力して、何が起こるか見てみましょう:
       /ignore

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
				レッスン 6 要約


  1. o をタイプするとカーソルの下の行を開けて、そこで挿入モードになる。
     O (大文字) をタイプするとカーソルの上の行で挿入モードになる。

  2. カーソル上の文字の次からテキストを追加するには a とタイプする。
     行末に自動でテキストを挿入するには大文字 A をタイプする。

  3. 大文字の R をタイプすると置換モードに入り、<ESC>を押すと抜ける。

  4. ":set xxx" とタイプするとオプション "xxx" が設定される。










~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
		     レッスン 7: オンラインヘルプコマンド

		     ** オンラインヘルプを使用しましょう **

  Vim には広範にわたるオンラインヘルプシステムがあります。
  ヘルプを開始するには、これら3つのどれか1つを試してみましょう:
	- ヘルプキー <HELP> を押す(もしあるならば)。
	- <F1> キーを押す(もしあるならば)。
	- :help <ENTER> とタイプする。

  ヘルプウィンドウを閉じるには :q <ENTER> とタイプします。

  ":help" コマンドに引数を与えることにより、あらゆる題名のヘルプを見つける
  ことができます。これらを試してみましょう(<ENTER> をタイプし忘れないように):

  :help w
  :help c_<T
  :help insert-index
  :help user-manual



~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
		      レッスン 8: 起動スクリプトの作成

			 ** Vim の特徴を発揮する **

  Vim には Vi よりも多くの特徴を踏まえていまが、そのほとんどは初期状態にて
  使用不可となっています。より多くの特徴を使いはじめるには "vimrc" ファイル
  を作成します。

  1. "vimrc" ファイルの編集を開始する。これはシステムに依存します。
	:edit ~/.vimrc			UNIX 向け
	:edit $VIM/_vimrc		MS-Windows 向け

  2. ここでサンプルの "vimrc" を読み込みます。

	:read $VIMRUNTIME/vimrc_example.vim

  3. 以下のようにファイルへ書き込みます。

	:write

  次回 Vim を起動すると、色づけ構文が使えるようになるでしょう。
  この "vimrc" ファイルへ、お好みの設定を追加することができます。
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

  これにて Vim のチュートリアルを終わります。エディタを簡単に、しかも充分に
  使うことができるようにと、Vim の持つ概念の要点のみを伝えようとしました。
  Vim にはさらに多くのコマンドがあり、ここで全てを説明することはできません。
  以降はユーザマニュアルを参照ください: "help :user-manual"

  これ以後の学習のために、次の本を推薦します。
	Vim - Vi Improved - by Steve Oualline
	出版社: New Riders
  最初の本は完全に Vim のために書かれました。とりわけ初心者にはお奨めです。
  多くの例題や図版が掲載されています。
  次のURLを参照して下さい http://iccf-holland.org/click5.html

  次は Vim よりも Vi について書かれた古い本ですが推薦します:
	Learning the Vi Editor - by Linda Lamb
	出版社: O'Reilly & Associates Inc.
  Vi でやりたいと思うことほぼ全てを知ることができる良書です。
  第6版では、Vim についての情報も含まれています。

  このチュートリアルは Colorado State University の Charles Smith のアイデア
  を基に、Colorado School of Mines の Michael C. Pierce と Robert K. Ware の
  両名によって書かれました。 E-mail: bware@mines.colorado.edu.

  Modified for Vim by Bram Moolenaar.

  日本語訳  松本泰弘  E-mail:mattn@mail.goo.ne.jp

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 vi:set ts=8 sts=4 sw=4 tw=76:
